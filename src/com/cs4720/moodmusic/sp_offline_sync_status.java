/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.cs4720.moodmusic;

public class sp_offline_sync_status {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected sp_offline_sync_status(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(sp_offline_sync_status obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        spotifyJNI.delete_sp_offline_sync_status(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setQueued_tracks(int value) {
    spotifyJNI.sp_offline_sync_status_queued_tracks_set(swigCPtr, this, value);
  }

  public int getQueued_tracks() {
    return spotifyJNI.sp_offline_sync_status_queued_tracks_get(swigCPtr, this);
  }

  public void setQueued_bytes(SWIGTYPE_p_uint64_t value) {
    spotifyJNI.sp_offline_sync_status_queued_bytes_set(swigCPtr, this, SWIGTYPE_p_uint64_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint64_t getQueued_bytes() {
    return new SWIGTYPE_p_uint64_t(spotifyJNI.sp_offline_sync_status_queued_bytes_get(swigCPtr, this), true);
  }

  public void setDone_tracks(int value) {
    spotifyJNI.sp_offline_sync_status_done_tracks_set(swigCPtr, this, value);
  }

  public int getDone_tracks() {
    return spotifyJNI.sp_offline_sync_status_done_tracks_get(swigCPtr, this);
  }

  public void setDone_bytes(SWIGTYPE_p_uint64_t value) {
    spotifyJNI.sp_offline_sync_status_done_bytes_set(swigCPtr, this, SWIGTYPE_p_uint64_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint64_t getDone_bytes() {
    return new SWIGTYPE_p_uint64_t(spotifyJNI.sp_offline_sync_status_done_bytes_get(swigCPtr, this), true);
  }

  public void setCopied_tracks(int value) {
    spotifyJNI.sp_offline_sync_status_copied_tracks_set(swigCPtr, this, value);
  }

  public int getCopied_tracks() {
    return spotifyJNI.sp_offline_sync_status_copied_tracks_get(swigCPtr, this);
  }

  public void setCopied_bytes(SWIGTYPE_p_uint64_t value) {
    spotifyJNI.sp_offline_sync_status_copied_bytes_set(swigCPtr, this, SWIGTYPE_p_uint64_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint64_t getCopied_bytes() {
    return new SWIGTYPE_p_uint64_t(spotifyJNI.sp_offline_sync_status_copied_bytes_get(swigCPtr, this), true);
  }

  public void setWillnotcopy_tracks(int value) {
    spotifyJNI.sp_offline_sync_status_willnotcopy_tracks_set(swigCPtr, this, value);
  }

  public int getWillnotcopy_tracks() {
    return spotifyJNI.sp_offline_sync_status_willnotcopy_tracks_get(swigCPtr, this);
  }

  public void setError_tracks(int value) {
    spotifyJNI.sp_offline_sync_status_error_tracks_set(swigCPtr, this, value);
  }

  public int getError_tracks() {
    return spotifyJNI.sp_offline_sync_status_error_tracks_get(swigCPtr, this);
  }

  public void setSyncing(boolean value) {
    spotifyJNI.sp_offline_sync_status_syncing_set(swigCPtr, this, value);
  }

  public boolean getSyncing() {
    return spotifyJNI.sp_offline_sync_status_syncing_get(swigCPtr, this);
  }

  public sp_offline_sync_status() {
    this(spotifyJNI.new_sp_offline_sync_status(), true);
  }

}
