/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.cs4720.moodmusic;

public final class sp_bitrate {
  public final static sp_bitrate SP_BITRATE_160k = new sp_bitrate("SP_BITRATE_160k", spotifyJNI.SP_BITRATE_160k_get());
  public final static sp_bitrate SP_BITRATE_320k = new sp_bitrate("SP_BITRATE_320k", spotifyJNI.SP_BITRATE_320k_get());
  public final static sp_bitrate SP_BITRATE_96k = new sp_bitrate("SP_BITRATE_96k", spotifyJNI.SP_BITRATE_96k_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static sp_bitrate swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + sp_bitrate.class + " with value " + swigValue);
  }

  private sp_bitrate(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private sp_bitrate(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private sp_bitrate(String swigName, sp_bitrate swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static sp_bitrate[] swigValues = { SP_BITRATE_160k, SP_BITRATE_320k, SP_BITRATE_96k };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

