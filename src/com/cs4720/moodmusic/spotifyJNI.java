/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.cs4720.moodmusic;

public class spotifyJNI {
  public final static native int SP_ERROR_OK_get();
  public final static native int SP_ERROR_BAD_API_VERSION_get();
  public final static native int SP_ERROR_API_INITIALIZATION_FAILED_get();
  public final static native int SP_ERROR_TRACK_NOT_PLAYABLE_get();
  public final static native int SP_ERROR_BAD_APPLICATION_KEY_get();
  public final static native int SP_ERROR_BAD_USERNAME_OR_PASSWORD_get();
  public final static native int SP_ERROR_USER_BANNED_get();
  public final static native int SP_ERROR_UNABLE_TO_CONTACT_SERVER_get();
  public final static native int SP_ERROR_CLIENT_TOO_OLD_get();
  public final static native int SP_ERROR_OTHER_PERMANENT_get();
  public final static native int SP_ERROR_BAD_USER_AGENT_get();
  public final static native int SP_ERROR_MISSING_CALLBACK_get();
  public final static native int SP_ERROR_INVALID_INDATA_get();
  public final static native int SP_ERROR_INDEX_OUT_OF_RANGE_get();
  public final static native int SP_ERROR_USER_NEEDS_PREMIUM_get();
  public final static native int SP_ERROR_OTHER_TRANSIENT_get();
  public final static native int SP_ERROR_IS_LOADING_get();
  public final static native int SP_ERROR_NO_STREAM_AVAILABLE_get();
  public final static native int SP_ERROR_PERMISSION_DENIED_get();
  public final static native int SP_ERROR_INBOX_IS_FULL_get();
  public final static native int SP_ERROR_NO_CACHE_get();
  public final static native int SP_ERROR_NO_SUCH_USER_get();
  public final static native int SP_ERROR_NO_CREDENTIALS_get();
  public final static native int SP_ERROR_NETWORK_DISABLED_get();
  public final static native int SP_ERROR_INVALID_DEVICE_ID_get();
  public final static native int SP_ERROR_CANT_OPEN_TRACE_FILE_get();
  public final static native int SP_ERROR_APPLICATION_BANNED_get();
  public final static native int SP_ERROR_OFFLINE_TOO_MANY_TRACKS_get();
  public final static native int SP_ERROR_OFFLINE_DISK_CACHE_get();
  public final static native int SP_ERROR_OFFLINE_EXPIRED_get();
  public final static native int SP_ERROR_OFFLINE_NOT_ALLOWED_get();
  public final static native int SP_ERROR_OFFLINE_LICENSE_LOST_get();
  public final static native int SP_ERROR_OFFLINE_LICENSE_ERROR_get();
  public final static native int SP_ERROR_LASTFM_AUTH_ERROR_get();
  public final static native int SP_ERROR_INVALID_ARGUMENT_get();
  public final static native int SP_ERROR_SYSTEM_FAILURE_get();
  public final static native String sp_error_message(int jarg1);
  public final static native int SPOTIFY_API_VERSION_get();
  public final static native int SP_CONNECTION_STATE_LOGGED_OUT_get();
  public final static native int SP_CONNECTION_STATE_LOGGED_IN_get();
  public final static native int SP_CONNECTION_STATE_DISCONNECTED_get();
  public final static native int SP_CONNECTION_STATE_UNDEFINED_get();
  public final static native int SP_CONNECTION_STATE_OFFLINE_get();
  public final static native int SP_SAMPLETYPE_INT16_NATIVE_ENDIAN_get();
  public final static native void sp_audioformat_sample_type_set(long jarg1, sp_audioformat jarg1_, int jarg2);
  public final static native int sp_audioformat_sample_type_get(long jarg1, sp_audioformat jarg1_);
  public final static native void sp_audioformat_sample_rate_set(long jarg1, sp_audioformat jarg1_, int jarg2);
  public final static native int sp_audioformat_sample_rate_get(long jarg1, sp_audioformat jarg1_);
  public final static native void sp_audioformat_channels_set(long jarg1, sp_audioformat jarg1_, int jarg2);
  public final static native int sp_audioformat_channels_get(long jarg1, sp_audioformat jarg1_);
  public final static native long new_sp_audioformat();
  public final static native void delete_sp_audioformat(long jarg1);
  public final static native int SP_BITRATE_160k_get();
  public final static native int SP_BITRATE_320k_get();
  public final static native int SP_BITRATE_96k_get();
  public final static native int SP_PLAYLIST_TYPE_PLAYLIST_get();
  public final static native int SP_PLAYLIST_TYPE_START_FOLDER_get();
  public final static native int SP_PLAYLIST_TYPE_END_FOLDER_get();
  public final static native int SP_PLAYLIST_TYPE_PLACEHOLDER_get();
  public final static native int SP_SEARCH_STANDARD_get();
  public final static native int SP_SEARCH_SUGGEST_get();
  public final static native int SP_PLAYLIST_OFFLINE_STATUS_NO_get();
  public final static native int SP_PLAYLIST_OFFLINE_STATUS_YES_get();
  public final static native int SP_PLAYLIST_OFFLINE_STATUS_DOWNLOADING_get();
  public final static native int SP_PLAYLIST_OFFLINE_STATUS_WAITING_get();
  public final static native int SP_TRACK_AVAILABILITY_UNAVAILABLE_get();
  public final static native int SP_TRACK_AVAILABILITY_AVAILABLE_get();
  public final static native int SP_TRACK_AVAILABILITY_NOT_STREAMABLE_get();
  public final static native int SP_TRACK_AVAILABILITY_BANNED_BY_ARTIST_get();
  public final static native int SP_TRACK_OFFLINE_NO_get();
  public final static native int SP_TRACK_OFFLINE_WAITING_get();
  public final static native int SP_TRACK_OFFLINE_DOWNLOADING_get();
  public final static native int SP_TRACK_OFFLINE_DONE_get();
  public final static native int SP_TRACK_OFFLINE_ERROR_get();
  public final static native int SP_TRACK_OFFLINE_DONE_EXPIRED_get();
  public final static native int SP_TRACK_OFFLINE_LIMIT_EXCEEDED_get();
  public final static native int SP_TRACK_OFFLINE_DONE_RESYNC_get();
  public final static native int SP_IMAGE_SIZE_NORMAL_get();
  public final static native int SP_IMAGE_SIZE_SMALL_get();
  public final static native int SP_IMAGE_SIZE_LARGE_get();
  public final static native void sp_audio_buffer_stats_samples_set(long jarg1, sp_audio_buffer_stats jarg1_, int jarg2);
  public final static native int sp_audio_buffer_stats_samples_get(long jarg1, sp_audio_buffer_stats jarg1_);
  public final static native void sp_audio_buffer_stats_stutter_set(long jarg1, sp_audio_buffer_stats jarg1_, int jarg2);
  public final static native int sp_audio_buffer_stats_stutter_get(long jarg1, sp_audio_buffer_stats jarg1_);
  public final static native long new_sp_audio_buffer_stats();
  public final static native void delete_sp_audio_buffer_stats(long jarg1);
  public final static native void sp_subscribers_count_set(long jarg1, sp_subscribers jarg1_, long jarg2);
  public final static native long sp_subscribers_count_get(long jarg1, sp_subscribers jarg1_);
  public final static native void sp_subscribers_subscribers_set(long jarg1, sp_subscribers jarg1_, long jarg2);
  public final static native long sp_subscribers_subscribers_get(long jarg1, sp_subscribers jarg1_);
  public final static native long new_sp_subscribers();
  public final static native void delete_sp_subscribers(long jarg1);
  public final static native int SP_CONNECTION_TYPE_UNKNOWN_get();
  public final static native int SP_CONNECTION_TYPE_NONE_get();
  public final static native int SP_CONNECTION_TYPE_MOBILE_get();
  public final static native int SP_CONNECTION_TYPE_MOBILE_ROAMING_get();
  public final static native int SP_CONNECTION_TYPE_WIFI_get();
  public final static native int SP_CONNECTION_TYPE_WIRED_get();
  public final static native int SP_CONNECTION_RULE_NETWORK_get();
  public final static native int SP_CONNECTION_RULE_NETWORK_IF_ROAMING_get();
  public final static native int SP_CONNECTION_RULE_ALLOW_SYNC_OVER_MOBILE_get();
  public final static native int SP_CONNECTION_RULE_ALLOW_SYNC_OVER_WIFI_get();
  public final static native int SP_SCROBBLING_STATE_USE_GLOBAL_SETTING_get();
  public final static native int SP_SCROBBLING_STATE_LOCAL_ENABLED_get();
  public final static native int SP_SCROBBLING_STATE_LOCAL_DISABLED_get();
  public final static native int SP_SCROBBLING_STATE_GLOBAL_ENABLED_get();
  public final static native int SP_SCROBBLING_STATE_GLOBAL_DISABLED_get();
  public final static native void sp_offline_sync_status_queued_tracks_set(long jarg1, sp_offline_sync_status jarg1_, int jarg2);
  public final static native int sp_offline_sync_status_queued_tracks_get(long jarg1, sp_offline_sync_status jarg1_);
  public final static native void sp_offline_sync_status_queued_bytes_set(long jarg1, sp_offline_sync_status jarg1_, long jarg2);
  public final static native long sp_offline_sync_status_queued_bytes_get(long jarg1, sp_offline_sync_status jarg1_);
  public final static native void sp_offline_sync_status_done_tracks_set(long jarg1, sp_offline_sync_status jarg1_, int jarg2);
  public final static native int sp_offline_sync_status_done_tracks_get(long jarg1, sp_offline_sync_status jarg1_);
  public final static native void sp_offline_sync_status_done_bytes_set(long jarg1, sp_offline_sync_status jarg1_, long jarg2);
  public final static native long sp_offline_sync_status_done_bytes_get(long jarg1, sp_offline_sync_status jarg1_);
  public final static native void sp_offline_sync_status_copied_tracks_set(long jarg1, sp_offline_sync_status jarg1_, int jarg2);
  public final static native int sp_offline_sync_status_copied_tracks_get(long jarg1, sp_offline_sync_status jarg1_);
  public final static native void sp_offline_sync_status_copied_bytes_set(long jarg1, sp_offline_sync_status jarg1_, long jarg2);
  public final static native long sp_offline_sync_status_copied_bytes_get(long jarg1, sp_offline_sync_status jarg1_);
  public final static native void sp_offline_sync_status_willnotcopy_tracks_set(long jarg1, sp_offline_sync_status jarg1_, int jarg2);
  public final static native int sp_offline_sync_status_willnotcopy_tracks_get(long jarg1, sp_offline_sync_status jarg1_);
  public final static native void sp_offline_sync_status_error_tracks_set(long jarg1, sp_offline_sync_status jarg1_, int jarg2);
  public final static native int sp_offline_sync_status_error_tracks_get(long jarg1, sp_offline_sync_status jarg1_);
  public final static native void sp_offline_sync_status_syncing_set(long jarg1, sp_offline_sync_status jarg1_, boolean jarg2);
  public final static native boolean sp_offline_sync_status_syncing_get(long jarg1, sp_offline_sync_status jarg1_);
  public final static native long new_sp_offline_sync_status();
  public final static native void delete_sp_offline_sync_status(long jarg1);
  public final static native void sp_session_callbacks_logged_in_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_logged_in_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_logged_out_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_logged_out_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_metadata_updated_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_metadata_updated_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_connection_error_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_connection_error_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_message_to_user_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_message_to_user_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_notify_main_thread_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_notify_main_thread_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_music_delivery_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_music_delivery_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_play_token_lost_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_play_token_lost_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_log_message_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_log_message_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_end_of_track_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_end_of_track_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_streaming_error_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_streaming_error_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_userinfo_updated_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_userinfo_updated_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_start_playback_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_start_playback_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_stop_playback_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_stop_playback_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_get_audio_buffer_stats_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_get_audio_buffer_stats_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_offline_status_updated_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_offline_status_updated_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_offline_error_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_offline_error_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_credentials_blob_updated_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_credentials_blob_updated_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_connectionstate_updated_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_connectionstate_updated_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_scrobble_error_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_scrobble_error_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native void sp_session_callbacks_private_session_mode_changed_set(long jarg1, sp_session_callbacks jarg1_, long jarg2);
  public final static native long sp_session_callbacks_private_session_mode_changed_get(long jarg1, sp_session_callbacks jarg1_);
  public final static native long new_sp_session_callbacks();
  public final static native void delete_sp_session_callbacks(long jarg1);
  public final static native void sp_session_config_api_version_set(long jarg1, sp_session_config jarg1_, int jarg2);
  public final static native int sp_session_config_api_version_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_cache_location_set(long jarg1, sp_session_config jarg1_, String jarg2);
  public final static native String sp_session_config_cache_location_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_settings_location_set(long jarg1, sp_session_config jarg1_, String jarg2);
  public final static native String sp_session_config_settings_location_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_application_key_set(long jarg1, sp_session_config jarg1_, long jarg2);
  public final static native long sp_session_config_application_key_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_application_key_size_set(long jarg1, sp_session_config jarg1_, long jarg2);
  public final static native long sp_session_config_application_key_size_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_user_agent_set(long jarg1, sp_session_config jarg1_, String jarg2);
  public final static native String sp_session_config_user_agent_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_callbacks_set(long jarg1, sp_session_config jarg1_, long jarg2, sp_session_callbacks jarg2_);
  public final static native long sp_session_config_callbacks_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_userdata_set(long jarg1, sp_session_config jarg1_, long jarg2);
  public final static native long sp_session_config_userdata_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_compress_playlists_set(long jarg1, sp_session_config jarg1_, boolean jarg2);
  public final static native boolean sp_session_config_compress_playlists_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_dont_save_metadata_for_playlists_set(long jarg1, sp_session_config jarg1_, boolean jarg2);
  public final static native boolean sp_session_config_dont_save_metadata_for_playlists_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_initially_unload_playlists_set(long jarg1, sp_session_config jarg1_, boolean jarg2);
  public final static native boolean sp_session_config_initially_unload_playlists_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_device_id_set(long jarg1, sp_session_config jarg1_, String jarg2);
  public final static native String sp_session_config_device_id_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_proxy_set(long jarg1, sp_session_config jarg1_, String jarg2);
  public final static native String sp_session_config_proxy_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_proxy_username_set(long jarg1, sp_session_config jarg1_, String jarg2);
  public final static native String sp_session_config_proxy_username_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_proxy_password_set(long jarg1, sp_session_config jarg1_, String jarg2);
  public final static native String sp_session_config_proxy_password_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_ca_certs_filename_set(long jarg1, sp_session_config jarg1_, String jarg2);
  public final static native String sp_session_config_ca_certs_filename_get(long jarg1, sp_session_config jarg1_);
  public final static native void sp_session_config_tracefile_set(long jarg1, sp_session_config jarg1_, String jarg2);
  public final static native String sp_session_config_tracefile_get(long jarg1, sp_session_config jarg1_);
  public final static native long new_sp_session_config();
  public final static native void delete_sp_session_config(long jarg1);
  public final static native int sp_session_create(long jarg1, sp_session_config jarg1_, long jarg2);
  public final static native int sp_session_release(long jarg1);
  public final static native int sp_session_login(long jarg1, String jarg2, String jarg3, boolean jarg4, String jarg5);
  public final static native int sp_session_relogin(long jarg1);
  public final static native int sp_session_remembered_user(long jarg1, String jarg2, long jarg3);
  public final static native String sp_session_user_name(long jarg1);
  public final static native int sp_session_forget_me(long jarg1);
  public final static native long sp_session_user(long jarg1);
  public final static native int sp_session_logout(long jarg1);
  public final static native int sp_session_flush_caches(long jarg1);
  public final static native int sp_session_connectionstate(long jarg1);
  public final static native long sp_session_userdata(long jarg1);
  public final static native int sp_session_set_cache_size(long jarg1, long jarg2);
  public final static native int sp_session_process_events(long jarg1, long jarg2);
  public final static native int sp_session_player_load(long jarg1, long jarg2);
  public final static native int sp_session_player_seek(long jarg1, int jarg2);
  public final static native int sp_session_player_play(long jarg1, boolean jarg2);
  public final static native int sp_session_player_unload(long jarg1);
  public final static native int sp_session_player_prefetch(long jarg1, long jarg2);
  public final static native long sp_session_playlistcontainer(long jarg1);
  public final static native long sp_session_inbox_create(long jarg1);
  public final static native long sp_session_starred_create(long jarg1);
  public final static native long sp_session_starred_for_user_create(long jarg1, String jarg2);
  public final static native long sp_session_publishedcontainer_for_user_create(long jarg1, String jarg2);
  public final static native int sp_session_preferred_bitrate(long jarg1, int jarg2);
  public final static native int sp_session_preferred_offline_bitrate(long jarg1, int jarg2, boolean jarg3);
  public final static native boolean sp_session_get_volume_normalization(long jarg1);
  public final static native int sp_session_set_volume_normalization(long jarg1, boolean jarg2);
  public final static native int sp_session_set_private_session(long jarg1, boolean jarg2);
  public final static native boolean sp_session_is_private_session(long jarg1);
  public final static native int sp_session_set_scrobbling(long jarg1, int jarg2, int jarg3);
  public final static native int sp_session_is_scrobbling(long jarg1, int jarg2, long jarg3);
  public final static native int sp_session_is_scrobbling_possible(long jarg1, int jarg2, long jarg3);
  public final static native int sp_session_set_social_credentials(long jarg1, int jarg2, String jarg3, String jarg4);
  public final static native int sp_session_set_connection_type(long jarg1, int jarg2);
  public final static native int sp_session_set_connection_rules(long jarg1, int jarg2);
  public final static native int sp_offline_tracks_to_sync(long jarg1);
  public final static native int sp_offline_num_playlists(long jarg1);
  public final static native boolean sp_offline_sync_get_status(long jarg1, long jarg2, sp_offline_sync_status jarg2_);
  public final static native int sp_offline_time_left(long jarg1);
  public final static native int sp_session_user_country(long jarg1);
  public final static native int SP_LINKTYPE_INVALID_get();
  public final static native int SP_LINKTYPE_TRACK_get();
  public final static native int SP_LINKTYPE_ALBUM_get();
  public final static native int SP_LINKTYPE_ARTIST_get();
  public final static native int SP_LINKTYPE_SEARCH_get();
  public final static native int SP_LINKTYPE_PLAYLIST_get();
  public final static native int SP_LINKTYPE_PROFILE_get();
  public final static native int SP_LINKTYPE_STARRED_get();
  public final static native int SP_LINKTYPE_LOCALTRACK_get();
  public final static native int SP_LINKTYPE_IMAGE_get();
  public final static native long sp_link_create_from_string(String jarg1);
  public final static native long sp_link_create_from_track(long jarg1, int jarg2);
  public final static native long sp_link_create_from_album(long jarg1);
  public final static native long sp_link_create_from_album_cover(long jarg1, int jarg2);
  public final static native long sp_link_create_from_artist(long jarg1);
  public final static native long sp_link_create_from_artist_portrait(long jarg1, int jarg2);
  public final static native long sp_link_create_from_artistbrowse_portrait(long jarg1, int jarg2);
  public final static native long sp_link_create_from_search(long jarg1);
  public final static native long sp_link_create_from_playlist(long jarg1);
  public final static native long sp_link_create_from_user(long jarg1);
  public final static native long sp_link_create_from_image(long jarg1);
  public final static native int sp_link_as_string(long jarg1, String jarg2, int jarg3);
  public final static native int sp_link_type(long jarg1);
  public final static native long sp_link_as_track(long jarg1);
  public final static native long sp_link_as_track_and_offset(long jarg1, long jarg2);
  public final static native long sp_link_as_album(long jarg1);
  public final static native long sp_link_as_artist(long jarg1);
  public final static native long sp_link_as_user(long jarg1);
  public final static native int sp_link_add_ref(long jarg1);
  public final static native int sp_link_release(long jarg1);
  public final static native boolean sp_track_is_loaded(long jarg1);
  public final static native int sp_track_error(long jarg1);
  public final static native int sp_track_offline_get_status(long jarg1);
  public final static native int sp_track_get_availability(long jarg1, long jarg2);
  public final static native boolean sp_track_is_local(long jarg1, long jarg2);
  public final static native boolean sp_track_is_autolinked(long jarg1, long jarg2);
  public final static native long sp_track_get_playable(long jarg1, long jarg2);
  public final static native boolean sp_track_is_placeholder(long jarg1);
  public final static native boolean sp_track_is_starred(long jarg1, long jarg2);
  public final static native int sp_track_set_starred(long jarg1, long jarg2, int jarg3, boolean jarg4);
  public final static native int sp_track_num_artists(long jarg1);
  public final static native long sp_track_artist(long jarg1, int jarg2);
  public final static native long sp_track_album(long jarg1);
  public final static native String sp_track_name(long jarg1);
  public final static native int sp_track_duration(long jarg1);
  public final static native int sp_track_popularity(long jarg1);
  public final static native int sp_track_disc(long jarg1);
  public final static native int sp_track_index(long jarg1);
  public final static native long sp_localtrack_create(String jarg1, String jarg2, String jarg3, int jarg4);
  public final static native int sp_track_add_ref(long jarg1);
  public final static native int sp_track_release(long jarg1);
  public final static native int SP_ALBUMTYPE_ALBUM_get();
  public final static native int SP_ALBUMTYPE_SINGLE_get();
  public final static native int SP_ALBUMTYPE_COMPILATION_get();
  public final static native int SP_ALBUMTYPE_UNKNOWN_get();
  public final static native boolean sp_album_is_loaded(long jarg1);
  public final static native boolean sp_album_is_available(long jarg1);
  public final static native long sp_album_artist(long jarg1);
  public final static native long sp_album_cover(long jarg1, int jarg2);
  public final static native String sp_album_name(long jarg1);
  public final static native int sp_album_year(long jarg1);
  public final static native int sp_album_type(long jarg1);
  public final static native int sp_album_add_ref(long jarg1);
  public final static native int sp_album_release(long jarg1);
  public final static native String sp_artist_name(long jarg1);
  public final static native boolean sp_artist_is_loaded(long jarg1);
  public final static native long sp_artist_portrait(long jarg1, int jarg2);
  public final static native int sp_artist_add_ref(long jarg1);
  public final static native int sp_artist_release(long jarg1);
  public final static native long sp_albumbrowse_create(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native boolean sp_albumbrowse_is_loaded(long jarg1);
  public final static native int sp_albumbrowse_error(long jarg1);
  public final static native long sp_albumbrowse_album(long jarg1);
  public final static native long sp_albumbrowse_artist(long jarg1);
  public final static native int sp_albumbrowse_num_copyrights(long jarg1);
  public final static native String sp_albumbrowse_copyright(long jarg1, int jarg2);
  public final static native int sp_albumbrowse_num_tracks(long jarg1);
  public final static native long sp_albumbrowse_track(long jarg1, int jarg2);
  public final static native String sp_albumbrowse_review(long jarg1);
  public final static native int sp_albumbrowse_backend_request_duration(long jarg1);
  public final static native int sp_albumbrowse_add_ref(long jarg1);
  public final static native int sp_albumbrowse_release(long jarg1);
  public final static native long sp_artistbrowse_create(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5);
  public final static native boolean sp_artistbrowse_is_loaded(long jarg1);
  public final static native int sp_artistbrowse_error(long jarg1);
  public final static native long sp_artistbrowse_artist(long jarg1);
  public final static native int sp_artistbrowse_num_portraits(long jarg1);
  public final static native long sp_artistbrowse_portrait(long jarg1, int jarg2);
  public final static native int sp_artistbrowse_num_tracks(long jarg1);
  public final static native long sp_artistbrowse_track(long jarg1, int jarg2);
  public final static native int sp_artistbrowse_num_tophit_tracks(long jarg1);
  public final static native long sp_artistbrowse_tophit_track(long jarg1, int jarg2);
  public final static native int sp_artistbrowse_num_albums(long jarg1);
  public final static native long sp_artistbrowse_album(long jarg1, int jarg2);
  public final static native int sp_artistbrowse_num_similar_artists(long jarg1);
  public final static native long sp_artistbrowse_similar_artist(long jarg1, int jarg2);
  public final static native String sp_artistbrowse_biography(long jarg1);
  public final static native int sp_artistbrowse_backend_request_duration(long jarg1);
  public final static native int sp_artistbrowse_add_ref(long jarg1);
  public final static native int sp_artistbrowse_release(long jarg1);
  public final static native int SP_IMAGE_FORMAT_UNKNOWN_get();
  public final static native int SP_IMAGE_FORMAT_JPEG_get();
  public final static native long sp_image_create(long jarg1, long jarg2);
  public final static native long sp_image_create_from_link(long jarg1, long jarg2);
  public final static native int sp_image_add_load_callback(long jarg1, long jarg2, long jarg3);
  public final static native int sp_image_remove_load_callback(long jarg1, long jarg2, long jarg3);
  public final static native boolean sp_image_is_loaded(long jarg1);
  public final static native int sp_image_error(long jarg1);
  public final static native int sp_image_format(long jarg1);
  public final static native long sp_image_data(long jarg1, long jarg2);
  public final static native long sp_image_image_id(long jarg1);
  public final static native int sp_image_add_ref(long jarg1);
  public final static native int sp_image_release(long jarg1);
  public final static native long sp_search_create(long jarg1, String jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9, int jarg10, int jarg11, long jarg12, long jarg13);
  public final static native boolean sp_search_is_loaded(long jarg1);
  public final static native int sp_search_error(long jarg1);
  public final static native int sp_search_num_tracks(long jarg1);
  public final static native long sp_search_track(long jarg1, int jarg2);
  public final static native int sp_search_num_albums(long jarg1);
  public final static native long sp_search_album(long jarg1, int jarg2);
  public final static native int sp_search_num_playlists(long jarg1);
  public final static native long sp_search_playlist(long jarg1, int jarg2);
  public final static native String sp_search_playlist_name(long jarg1, int jarg2);
  public final static native String sp_search_playlist_uri(long jarg1, int jarg2);
  public final static native String sp_search_playlist_image_uri(long jarg1, int jarg2);
  public final static native int sp_search_num_artists(long jarg1);
  public final static native long sp_search_artist(long jarg1, int jarg2);
  public final static native String sp_search_query(long jarg1);
  public final static native String sp_search_did_you_mean(long jarg1);
  public final static native int sp_search_total_tracks(long jarg1);
  public final static native int sp_search_total_albums(long jarg1);
  public final static native int sp_search_total_artists(long jarg1);
  public final static native int sp_search_total_playlists(long jarg1);
  public final static native int sp_search_add_ref(long jarg1);
  public final static native int sp_search_release(long jarg1);
  public final static native void sp_playlist_callbacks_tracks_added_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_tracks_added_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_tracks_removed_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_tracks_removed_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_tracks_moved_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_tracks_moved_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_playlist_renamed_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_playlist_renamed_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_playlist_state_changed_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_playlist_state_changed_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_playlist_update_in_progress_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_playlist_update_in_progress_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_playlist_metadata_updated_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_playlist_metadata_updated_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_track_created_changed_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_track_created_changed_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_track_seen_changed_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_track_seen_changed_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_description_changed_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_description_changed_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_image_changed_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_image_changed_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_track_message_changed_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_track_message_changed_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native void sp_playlist_callbacks_subscribers_changed_set(long jarg1, sp_playlist_callbacks jarg1_, long jarg2);
  public final static native long sp_playlist_callbacks_subscribers_changed_get(long jarg1, sp_playlist_callbacks jarg1_);
  public final static native long new_sp_playlist_callbacks();
  public final static native void delete_sp_playlist_callbacks(long jarg1);
  public final static native boolean sp_playlist_is_loaded(long jarg1);
  public final static native int sp_playlist_add_callbacks(long jarg1, long jarg2, sp_playlist_callbacks jarg2_, long jarg3);
  public final static native int sp_playlist_remove_callbacks(long jarg1, long jarg2, sp_playlist_callbacks jarg2_, long jarg3);
  public final static native int sp_playlist_num_tracks(long jarg1);
  public final static native long sp_playlist_track(long jarg1, int jarg2);
  public final static native int sp_playlist_track_create_time(long jarg1, int jarg2);
  public final static native long sp_playlist_track_creator(long jarg1, int jarg2);
  public final static native boolean sp_playlist_track_seen(long jarg1, int jarg2);
  public final static native int sp_playlist_track_set_seen(long jarg1, int jarg2, boolean jarg3);
  public final static native String sp_playlist_track_message(long jarg1, int jarg2);
  public final static native String sp_playlist_name(long jarg1);
  public final static native int sp_playlist_rename(long jarg1, String jarg2);
  public final static native long sp_playlist_owner(long jarg1);
  public final static native boolean sp_playlist_is_collaborative(long jarg1);
  public final static native int sp_playlist_set_collaborative(long jarg1, boolean jarg2);
  public final static native int sp_playlist_set_autolink_tracks(long jarg1, boolean jarg2);
  public final static native String sp_playlist_get_description(long jarg1);
  public final static native boolean sp_playlist_get_image(long jarg1, long jarg2);
  public final static native boolean sp_playlist_has_pending_changes(long jarg1);
  public final static native int sp_playlist_add_tracks(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int sp_playlist_remove_tracks(long jarg1, long jarg2, int jarg3);
  public final static native int sp_playlist_reorder_tracks(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native long sp_playlist_num_subscribers(long jarg1);
  public final static native long sp_playlist_subscribers(long jarg1);
  public final static native int sp_playlist_subscribers_free(long jarg1, sp_subscribers jarg1_);
  public final static native int sp_playlist_update_subscribers(long jarg1, long jarg2);
  public final static native boolean sp_playlist_is_in_ram(long jarg1, long jarg2);
  public final static native int sp_playlist_set_in_ram(long jarg1, long jarg2, boolean jarg3);
  public final static native long sp_playlist_create(long jarg1, long jarg2);
  public final static native int sp_playlist_set_offline_mode(long jarg1, long jarg2, boolean jarg3);
  public final static native int sp_playlist_get_offline_status(long jarg1, long jarg2);
  public final static native int sp_playlist_get_offline_download_completed(long jarg1, long jarg2);
  public final static native int sp_playlist_add_ref(long jarg1);
  public final static native int sp_playlist_release(long jarg1);
  public final static native void sp_playlistcontainer_callbacks_playlist_added_set(long jarg1, sp_playlistcontainer_callbacks jarg1_, long jarg2);
  public final static native long sp_playlistcontainer_callbacks_playlist_added_get(long jarg1, sp_playlistcontainer_callbacks jarg1_);
  public final static native void sp_playlistcontainer_callbacks_playlist_removed_set(long jarg1, sp_playlistcontainer_callbacks jarg1_, long jarg2);
  public final static native long sp_playlistcontainer_callbacks_playlist_removed_get(long jarg1, sp_playlistcontainer_callbacks jarg1_);
  public final static native void sp_playlistcontainer_callbacks_playlist_moved_set(long jarg1, sp_playlistcontainer_callbacks jarg1_, long jarg2);
  public final static native long sp_playlistcontainer_callbacks_playlist_moved_get(long jarg1, sp_playlistcontainer_callbacks jarg1_);
  public final static native void sp_playlistcontainer_callbacks_container_loaded_set(long jarg1, sp_playlistcontainer_callbacks jarg1_, long jarg2);
  public final static native long sp_playlistcontainer_callbacks_container_loaded_get(long jarg1, sp_playlistcontainer_callbacks jarg1_);
  public final static native long new_sp_playlistcontainer_callbacks();
  public final static native void delete_sp_playlistcontainer_callbacks(long jarg1);
  public final static native int sp_playlistcontainer_add_callbacks(long jarg1, long jarg2, sp_playlistcontainer_callbacks jarg2_, long jarg3);
  public final static native int sp_playlistcontainer_remove_callbacks(long jarg1, long jarg2, sp_playlistcontainer_callbacks jarg2_, long jarg3);
  public final static native int sp_playlistcontainer_num_playlists(long jarg1);
  public final static native boolean sp_playlistcontainer_is_loaded(long jarg1);
  public final static native long sp_playlistcontainer_playlist(long jarg1, int jarg2);
  public final static native int sp_playlistcontainer_playlist_type(long jarg1, int jarg2);
  public final static native int sp_playlistcontainer_playlist_folder_name(long jarg1, int jarg2, String jarg3, int jarg4);
  public final static native long sp_playlistcontainer_playlist_folder_id(long jarg1, int jarg2);
  public final static native long sp_playlistcontainer_add_new_playlist(long jarg1, String jarg2);
  public final static native long sp_playlistcontainer_add_playlist(long jarg1, long jarg2);
  public final static native int sp_playlistcontainer_remove_playlist(long jarg1, int jarg2);
  public final static native int sp_playlistcontainer_move_playlist(long jarg1, int jarg2, int jarg3, boolean jarg4);
  public final static native int sp_playlistcontainer_add_folder(long jarg1, int jarg2, String jarg3);
  public final static native long sp_playlistcontainer_owner(long jarg1);
  public final static native int sp_playlistcontainer_add_ref(long jarg1);
  public final static native int sp_playlistcontainer_release(long jarg1);
  public final static native int sp_playlistcontainer_get_unseen_tracks(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int sp_playlistcontainer_clear_unseen_tracks(long jarg1, long jarg2);
  public final static native int SP_RELATION_TYPE_UNKNOWN_get();
  public final static native int SP_RELATION_TYPE_NONE_get();
  public final static native int SP_RELATION_TYPE_UNIDIRECTIONAL_get();
  public final static native int SP_RELATION_TYPE_BIDIRECTIONAL_get();
  public final static native String sp_user_canonical_name(long jarg1);
  public final static native String sp_user_display_name(long jarg1);
  public final static native boolean sp_user_is_loaded(long jarg1);
  public final static native int sp_user_add_ref(long jarg1);
  public final static native int sp_user_release(long jarg1);
  public final static native int SP_TOPLIST_TYPE_ARTISTS_get();
  public final static native int SP_TOPLIST_TYPE_ALBUMS_get();
  public final static native int SP_TOPLIST_TYPE_TRACKS_get();
  public final static native int SP_TOPLIST_REGION_EVERYWHERE_get();
  public final static native int SP_TOPLIST_REGION_USER_get();
  public final static native long sp_toplistbrowse_create(long jarg1, int jarg2, int jarg3, String jarg4, long jarg5, long jarg6);
  public final static native boolean sp_toplistbrowse_is_loaded(long jarg1);
  public final static native int sp_toplistbrowse_error(long jarg1);
  public final static native int sp_toplistbrowse_add_ref(long jarg1);
  public final static native int sp_toplistbrowse_release(long jarg1);
  public final static native int sp_toplistbrowse_num_artists(long jarg1);
  public final static native long sp_toplistbrowse_artist(long jarg1, int jarg2);
  public final static native int sp_toplistbrowse_num_albums(long jarg1);
  public final static native long sp_toplistbrowse_album(long jarg1, int jarg2);
  public final static native int sp_toplistbrowse_num_tracks(long jarg1);
  public final static native long sp_toplistbrowse_track(long jarg1, int jarg2);
  public final static native int sp_toplistbrowse_backend_request_duration(long jarg1);
  public final static native long sp_inbox_post_tracks(long jarg1, String jarg2, long jarg3, int jarg4, String jarg5, long jarg6, long jarg7);
  public final static native int sp_inbox_error(long jarg1);
  public final static native int sp_inbox_add_ref(long jarg1);
  public final static native int sp_inbox_release(long jarg1);
  public final static native String sp_build_id();
}
