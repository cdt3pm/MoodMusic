/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.cs4720.moodmusic;

public class sp_audioformat {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected sp_audioformat(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(sp_audioformat obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        spotifyJNI.delete_sp_audioformat(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setSample_type(sp_sampletype value) {
    spotifyJNI.sp_audioformat_sample_type_set(swigCPtr, this, value.swigValue());
  }

  public sp_sampletype getSample_type() {
    return sp_sampletype.swigToEnum(spotifyJNI.sp_audioformat_sample_type_get(swigCPtr, this));
  }

  public void setSample_rate(int value) {
    spotifyJNI.sp_audioformat_sample_rate_set(swigCPtr, this, value);
  }

  public int getSample_rate() {
    return spotifyJNI.sp_audioformat_sample_rate_get(swigCPtr, this);
  }

  public void setChannels(int value) {
    spotifyJNI.sp_audioformat_channels_set(swigCPtr, this, value);
  }

  public int getChannels() {
    return spotifyJNI.sp_audioformat_channels_get(swigCPtr, this);
  }

  public sp_audioformat() {
    this(spotifyJNI.new_sp_audioformat(), true);
  }

}
